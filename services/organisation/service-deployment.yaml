apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    com.mirriad.spec.openapi: http://organisation:8080/v2/api-docs
    kompose.cmd: kompose convert
    kompose.version: 1.22.0 (HEAD)
    traefik.enable: "true"
    traefik.frontend.rule: Host:api-internal.mirriad.com;PathPrefixStrip:/organisation/
    traefik.port: "80"
  creationTimestamp: null
  labels:
    io.kompose.service: service
  name: service
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: service
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        com.mirriad.spec.openapi: http://organisation:8080/v2/api-docs
        kompose.cmd: kompose convert
        kompose.version: 1.22.0 (HEAD)
        traefik.enable: "true"
        traefik.frontend.rule: Host:api-internal.mirriad.com;PathPrefixStrip:/organisation/
        traefik.port: "80"
      creationTimestamp: null
      labels:
        io.kompose.service: service
    spec:
      containers:
        - env:
            - name: ADCLOUD_ENV
              value: t01
            - name: BASEURI
              value: https://t01-marketplace.mirriad.com
            - name: DB_HOSTNAME
              value: t01-adcloud.cnttbcfsmwb5.eu-west-1.rds.amazonaws.com
            - name: DB_PASSWORD
              value: v6Nev^IgcGg
            - name: DB_USERNAME
              value: adcloud
            - name: server.port
              value: "80"
          image: mirriad/organisation:37c35605ffd823d4e538a6e5a44271420984d0ed
          name: service
          resources: {}
          volumeMounts:
            - mountPath: /opt/vault
              name: composeorganisationstack-token
      restartPolicy: Always
      volumes:
        - name: composeorganisationstack-token
          persistentVolumeClaim:
            claimName: composeorganisationstack-token
status: {}
